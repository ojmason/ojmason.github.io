<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nanogenmo on Arguable Intelligence</title>
    <link>https://ojmason.github.io/tags/nanogenmo/index.xml</link>
    <description>Recent content in Nanogenmo on Arguable Intelligence</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <copyright>(C) Oliver Mason</copyright>
    <atom:link href="https://ojmason.github.io/tags/nanogenmo/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>National Novel Generation Month -- Day 6</title>
      <link>https://ojmason.github.io/blog/national-novel-generation-month----day-6/</link>
      <pubDate>Fri, 24 Nov 2017 22:15:48 +0000</pubDate>
      
      <guid>https://ojmason.github.io/blog/national-novel-generation-month----day-6/</guid>
      <description>&lt;p&gt;Day 6 &amp;ndash; but today is November 24th&amp;hellip; this just serves to show how hard it is to combine a side project
with a full-time job, a family, and other hobbies! The last two weekends I spent sailing at two all-weekend
races (Northampton and Draycote), and in the evenings I am generally too busy with other things. And I don&amp;rsquo;t
want to &amp;lsquo;pull an all-nighter&amp;rsquo;, as it&amp;rsquo;s not a sustainable way to do things. However, today I got a few things
done:&lt;/p&gt;

&lt;p&gt;The central element of my project is a &amp;lsquo;world simulator&amp;rsquo;, in which the characters act out their desires, follow
their goals, and interact in (hopefully) interesting ways, which I will then harvest to generate a story from.
The core of the simulator is a planner: you feed in the characters&amp;rsquo; goals, and they will then find a way of
doing what they need to do in order to achieve them. The planning algorithm I&amp;rsquo;m using is called Goal Oriented
Action Planning (GOAP), basically a back-ward chaining algorithm: Starting from the goal, you work backwards
to see which actions get you to your goal. Each action has a post-condition (which would be matched to the
goal), and a pre-condition (which becomes the new goal). You select an action whose post-condition matches
some of the character&amp;rsquo;s goal conditions, and then see how you get there. Each action also has a cost associated
with it, which allows you to choose a more efficient path in case there are several options.&lt;/p&gt;

&lt;p&gt;I have today managed to implement a very basic version of that in Scheme. I&amp;rsquo;m using atomic conditions, but
eventually will have more complicated expressions, but it is a first step. For several toy scenarioes the
planner does indeed find suitable solutions, which are paths through a network of states. Adjusting this to
the final world representation should not be too much of an issue.&lt;/p&gt;

&lt;p&gt;I have resigned myself to not finishing this system by the end of the month. But I&amp;rsquo;ve made a start, and will try
to get this continued throughout the year, so that I have a novel ready by NaNoGenMo 2018&amp;hellip; On the positive side,
my Scheme programming is getting better, and I have loads of ideas about what to implement over the coming year.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>National Novel Generation Month -- Day 5</title>
      <link>https://ojmason.github.io/blog/national-novel-generation-month----day-5/</link>
      <pubDate>Tue, 07 Nov 2017 11:05:29 +0000</pubDate>
      
      <guid>https://ojmason.github.io/blog/national-novel-generation-month----day-5/</guid>
      <description>&lt;p&gt;Today just some minor implementations; a start on basic functions to maintain the world: add and update character
information, etc. All rather mundane yet necessary stuff. More reading in &lt;em&gt;Inside Computer Understanding&lt;/em&gt; by
Schank and Riesbeck, and the realisation that I really have to cut down things if I want to get anything done by
the end of the month. The more interesting part for me is the natural language generation, so I might have to give up
on generating an interesting world in favour of more trivial events.&lt;/p&gt;

&lt;p&gt;I think back with sentimental feelings to the days of being a student &amp;ndash; no job, no family, but lots of spare time
to work on interesting stuff like this. I think that is the real benefit of a university education: the freedom to
research pet projects!&lt;/p&gt;

&lt;p&gt;In order to make it worthwhile, I will develop the world simulator in a modular way, so that more complexity
can always be added in later on. New plans or goals, new actions, or whatever else is required to make it more
realistic. I might end up with a version of the Sims&amp;hellip; but with a narrative text interface, rather than a graphical
one. Let&amp;rsquo;s see how far I get.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>National Novel Generation Month -- Day 4</title>
      <link>https://ojmason.github.io/blog/national-novel-generation-month----day-4/</link>
      <pubDate>Sun, 05 Nov 2017 23:25:33 +0000</pubDate>
      
      <guid>https://ojmason.github.io/blog/national-novel-generation-month----day-4/</guid>
      <description>&lt;p&gt;Today is only day 4, as I was too busy to do anything on the project yesterday. I spent a bit
more time on emotions, exploring the &lt;a href=&#34;https://en.wikipedia.org/wiki/Contrasting_and_categorization_of_emotions#Plutchik.27s_wheel_of_emotions&#34;&gt;Wheel of Emotions&lt;/a&gt;
in a bit more detail. Implementation-wise I made a start on the module that generates and handles characters.
From the wheel of emotions it is possible to derive a number of secondary emotions, and as I use
emotion &amp;lsquo;coordinates&amp;rsquo; to evaluate the stance of a character towards other characters, this should
allow for a decent modelling of interpersonal relations. I&amp;rsquo;m still not sure how this will influence
decision making. There will probably have to be some evaluation function which assigns a numerical
score to each option, and that will be modified by the stance of the character towards any affected
characters, and also the character&amp;rsquo;s own current emotional state. If they are furious, they might
actually choose an irrational option that harms themselves.&lt;/p&gt;

&lt;p&gt;When rendering this as a story, it might be worth looking at state changes, and possibly to add changes
to emotional states as annotations to any activities that are going on, so that we can generate text like
&lt;em&gt;A did some action, and it filled B with anger.&lt;/em&gt; or &lt;em&gt;A was overjoyed to see B again.&lt;/em&gt; &amp;ndash; obviously, it
is always better to describe emotional states indirectly where possible, but that seems to hard for now.&lt;/p&gt;

&lt;p&gt;Given how little time I can devote to the project, I think I will have to scale it down a bit if I want to
have anything ready by the end of the month. I might always try to continue working on it afterwards for
the more ambitious &amp;lsquo;stretch goals&amp;rsquo;.&lt;/p&gt;

&lt;p&gt;On the to-do list now is the representation of world knowledge, both the objective &amp;lsquo;truth&amp;rsquo; and the characters&amp;rsquo;
individual views of it. Then the world simulator/planner, and then a few basic aims. At that point I should
have a simple TaleSpin working, which I can extend with more details. I would then add more aims and actions to it as I go
along, and start work on the routine to generate the story from the world log, and finally the verbalisation,
which will be a slightly more sophisticated clone of Mumble.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>National Novel Generation Month -- Day 3</title>
      <link>https://ojmason.github.io/blog/national-novel-generation-month----day-3/</link>
      <pubDate>Fri, 03 Nov 2017 17:41:28 +0000</pubDate>
      
      <guid>https://ojmason.github.io/blog/national-novel-generation-month----day-3/</guid>
      <description>&lt;p&gt;Now that I have a basic (abstract) plot outline and some idea about the characters&amp;rsquo; emotions,
I need to think about what drives them. &lt;a href=&#34;../national-novel-generation-month----day-2/&#34;&gt;Yesterday&lt;/a&gt; I listed some aims that
the system would understand. So, each character gets a set of initial aims that they are trying to
achieve. Ideally there would be some conflict built in, for example a love interest: two separate
characters want to fall in love with the same person. As they attempt to win that person&amp;rsquo;s heart,
they might clash. Or, decide to live in an open relationship together as a triple, who knows!&lt;/p&gt;

&lt;p&gt;That would also make it easy to implement some of &lt;a href=&#34;../national-novel-generation-month----day-1/&#34;&gt;Propp&amp;rsquo;s functions&lt;/a&gt;: the
&lt;em&gt;interdiction&lt;/em&gt; would mean that the hero is told one of his aims is not allowed. And the &lt;em&gt;interdiction-violation&lt;/em&gt;
would mean that the hero ignores that, and keep it as an aim. Alternatively, a friend&amp;rsquo;s aim could be disallowed,
and the hero would try to achieve the aim for the friend, such as acquire an object and give it to the friend.&lt;/p&gt;

&lt;p&gt;The next step then is to annotate the narrative functions with actions and aims; for example, &lt;em&gt;absentation&lt;/em&gt;
could be an &lt;em&gt;atrans&lt;/em&gt; of a friend to a location as an action, and the same for the hero as an aim, as the hero
wants to be with their friend. There might be some conflicting aim (such as staying at home, protecting the
family), but the resolution might be that the friend starts feeling sad when away from their home environment,
leading to the aim of coming back home, which then achieves the hero&amp;rsquo;s aim as well.&lt;/p&gt;

&lt;p&gt;I also need to start thinking about the &lt;em&gt;World Simulator&lt;/em&gt;, the engine that does all the heavy lifting of
producing the story content. The original idea is to take &lt;em&gt;TaleSpin&lt;/em&gt;, but that might be a bit too simplistic.
After all, it&amp;rsquo;s only really been used for short stories about Joe Bear and Irving Bird. In addition I need
timestamping to keep track of where the various characters are and what they are doing, and a more sophisticated
logging facility, as the simulator log will be fed into the story renderer at the end. I also need to work
with multiple characters at once, so the whole setup needs to be a bit more capable than the original.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>National Novel Generation Month -- Day 2</title>
      <link>https://ojmason.github.io/blog/national-novel-generation-month----day-2/</link>
      <pubDate>Thu, 02 Nov 2017 23:08:09 +0000</pubDate>
      
      <guid>https://ojmason.github.io/blog/national-novel-generation-month----day-2/</guid>
      <description>&lt;p&gt;Today was more of a research day, apart from some refactoring of yesterday&amp;rsquo;s work. Spent ages trying
to track down an error, which turned out to be one missing level of brackets in a data file. Oh well,
at least I&amp;rsquo;m getting used to debugging Scheme code now (I&amp;rsquo;m using guile to develop this system).&lt;/p&gt;

&lt;p&gt;To turn the basic plot into a story, I need to turn the Proppian functions into actions. So I&amp;rsquo;m thinking
of a way of annotating them with what essentially happens in each function. This can be a conceptual
dependency-style structure, but possibly also using some higher level commands than just the basic
primitives that Schank et al used in their work. These would later be expanded into such primitives to
be fed into the language generator at the end.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve also compiled an initial list of &lt;em&gt;aims&lt;/em&gt;, which will drive what the characters will be doing. These
are for example&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;go to location&lt;/li&gt;
&lt;li&gt;go to person&lt;/li&gt;
&lt;li&gt;acquire object&lt;/li&gt;
&lt;li&gt;deliver object&lt;/li&gt;
&lt;li&gt;acquire information&lt;/li&gt;
&lt;li&gt;defeat person&lt;/li&gt;
&lt;li&gt;destroy object&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So the Propp function &lt;em&gt;departure&lt;/em&gt; maps onto giving the hero the aim &lt;em&gt;go to location&lt;/em&gt;. What that location is,
remains to be seen. It could be the location where a person or object can be found. Whereas &lt;em&gt;reconnaissance&lt;/em&gt;
gives the villain the aim &lt;em&gt;acquire information&lt;/em&gt;. There will be different ways to achieve these aims, which
will involve sub-aims, and hopefully enough variation to generate plenty of different stories.&lt;/p&gt;

&lt;p&gt;Thinking about characters, I&amp;rsquo;ve been looking at emotions. Emotions will determine how characters react, though
I have as yet no clue how that would work. I&amp;rsquo;ve come across a scheme by
&lt;a href=&#34;https://en.wikipedia.org/wiki/Robert_Plutchik&#34;&gt;Robert Plutchik&lt;/a&gt;, which uses eight basic emotions, where two
are paired as counterparts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Trust - Disgust&lt;/li&gt;
&lt;li&gt;Fear - Anger&lt;/li&gt;
&lt;li&gt;Sadness - Joy&lt;/li&gt;
&lt;li&gt;Surprise - Anticipation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There would be a scale (-10 to +10 or so), so an emotion item would be a list of four numbers. A character
will have a basic emotional state, but would also have emotion items describing the relationship with other characters.
The states are variable, so if character A is angry, and meets character B, towards whome they feel joy, then they
might become less angry. Obviously a very simplistic way to model something as complicated as human emotions,
but the perfect is the enemy of the good. Especially if you only have one month!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>National Novel Generation Month -- Day 1</title>
      <link>https://ojmason.github.io/blog/national-novel-generation-month----day-1/</link>
      <pubDate>Wed, 01 Nov 2017 22:29:36 +0000</pubDate>
      
      <guid>https://ojmason.github.io/blog/national-novel-generation-month----day-1/</guid>
      <description>&lt;p&gt;I have this year finally managed to have a go at NaNoGenMo, the attempt to write code to generate a novel, in analogy
to NaNoWriMo, where people try to actually write a novel themselves (which sounds like rather a lot of hard
work). Instead, I will instruct the computer to do it for me.&lt;/p&gt;

&lt;p&gt;My approach will consist of various stages, and at the top level I am planning to generate a broad and abstract
sequence of events that will be fleshed out in subsequent stages. I have chosen the framework of
&lt;a href=&#34;https://en.wikipedia.org/wiki/Vladimir_Propp&#34;&gt;Vladimir Propp&lt;/a&gt;, who analysed Russian folk tales and came up with
a list of 31 &lt;em&gt;narrative functions&lt;/em&gt;, which can be grouped into four distinct sections. I&amp;rsquo;m generating a list of
sections, where each section can have up to four functions, and then I pick the appropriate number of functions
randomly from the list of functions for each section.&lt;/p&gt;

&lt;p&gt;There are some constraints, so you cannot have a &lt;em&gt;return&lt;/em&gt; unless you also had a &lt;em&gt;departure&lt;/em&gt; beforehand. I have
implemented a very simple routine which churns out sequences that fulfil their constraints. Quite primitive at
the moment, but perhaps a starting point.&lt;/p&gt;

&lt;p&gt;Some example outputs (for their meaning see the Wikipedia link above) are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;(complicity trickery departure departure villany first-donor-func hero-reaction wedding pursuit)&lt;br /&gt;
This is a bit weird, as there are two departures (but they could be different people), and after
the &lt;em&gt;wedding&lt;/em&gt; there is a &lt;em&gt;pursuit&lt;/em&gt;, so the hero is chased away by a villain after he got married
and rewarded/promoted. Strange, but perhaps leading to an interesting story!&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;(interdiction trickery interdiction trickery departure departure departure first-donor-func struggle struggle transfiguration difficult-task)&lt;br /&gt;
Here the hero gets a warning/command twice, and each time a villain attempts some deception. This time,
&lt;em&gt;three&lt;/em&gt; people leave (I think that needs to be cut down to single occurrence only!) and a lot of fighting
is happening.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thing is, I can imagine writing a story around those functions. The
challenge is to see if the computer can do that, too. Still early
days.  The main concern with this whole thing is that the generated
novel will either be trivial and boring, or non-sensical and
incoherent. Probably even both. I am under no illusions that the final result will be worthwhile
reading; but I will only find out at the end!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>